<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mangement.mybatis.mappers.SalaryHistoryMapper">
	<resultMap type="SalaryHistory" id="SalaryHistoryResult">
		<id property="payoffDate" column="payoffDate" />
		<id property="ID" column="ID" />
		<result property="basicSalary" column="basicSalary" />
		<result property="livingAllowance" column="livingAllowance" />
		<result property="workDay" column="workDay" />
		<result property="attendanceAward" column="attendanceAward" />
		<result property="socialSecurity" column="socialSecurity" />
		<result property="tax" column="tax" />
		<result property="totalSalary" column="totalSalary" />
		
		<association property="user" column="ID" select="com.mangement.mybatis.mappers.UserMapper.findByID"></association>
	</resultMap>

	<insert id="insert" parameterType="SalaryHistory">
		insert into salaryhistory
		values
			(#{payoffDate},
			#{ID},
			#{basicSalary},
			#{livingAllowance},
			#{workDay},
			#{attendanceAward},
			#{socialSecurity},
			#{tax},
			#{totalSalary})
	</insert>

	<insert id="add" parameterType="Map">
		insert into salaryhistory
		values
		<foreach item="SalaryHistory" collection="SalaryHistorys"
			separator=",">
			(#{SalaryHistory.payoffDate},
			#{SalaryHistory.ID},
			#{SalaryHistory.basicSalary},
			#{SalaryHistory.livingAllowance},
			#{SalaryHistory.workDay},
			#{SalaryHistory.attendanceAward},
			#{SalaryHistory.socialSecurity},
			#{SalaryHistory.tax},
			#{SalaryHistory.totalSalary})
		</foreach>
	</insert>

	<delete id="delete" parameterType="Map">
		delete from salaryhistory
		<where>
			<if test="payoffDate!=null">
				and payoffDate = #{payoffDate}
			</if>
			<if test="ID!=null">
				and ID like #{ID}
			</if>
			<if test="basicSalary!=null">
				and basicSalary = #{basicSalary}
			</if>
			<if test="livingAllowance!=null">
				and livingAllowance = #{livingAllowance}
			</if>
			<if test="workDay!=null">
				and workDay = #{workDay}
			</if>
			<if test="attendanceAward!=null">
				and attendanceAward = #{attendanceAward}
			</if>
			<if test="socialSecurity!=null">
				and socialSecurity = #{socialSecurity}
			</if>
			<if test="tax!=null">
				and tax = #{tax}
			</if>
			<if test="totalSalary!=null">
				and totalSalary = #{totalSalary}
			</if>
		</where>
	</delete>

	<select id="findByID" parameterType="String" resultMap="SalaryHistoryResult">
		select * from salaryhistory where ID=#{ID}
	</select>

	<select id="find" parameterType="Map" resultMap="SalaryHistoryResult">
		select * from salaryhistory
		<where>
			<if test="payoffDate!=null">
				and payoffDate = #{payoffDate}
			</if>
			<if test="ID!=null">
				and ID like #{ID}
			</if>
			<if test="basicSalary!=null">
				and basicSalary = #{basicSalary}
			</if>
			<if test="livingAllowance!=null">
				and livingAllowance = #{livingAllowance}
			</if>
			<if test="workDay!=null">
				and workDay = #{workDay}
			</if>
			<if test="attendanceAward!=null">
				and attendanceAward = #{attendanceAward}
			</if>
			<if test="socialSecurity!=null">
				and socialSecurity = #{socialSecurity}
			</if>
			<if test="tax!=null">
				and tax = #{tax}
			</if>
			<if test="totalSalary!=null">
				and totalSalary = #{totalSalary}
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>

	<update id="update" parameterType="SalaryHistory">
		update salaryhistory
		<set>
			<if test="basicSalary!=null">
				basicSalary = #{basicSalary},
			</if>
			<if test="livingAllowance!=null">
				livingAllowance = #{livingAllowance},
			</if>
			<if test="workDay!=null">
				workDay = #{workDay},
			</if>
			<if test="attendanceAward!=null">
				attendanceAward = #{attendanceAward},
			</if>
			<if test="socialSecurity!=null">
				socialSecurity = #{socialSecurity},
			</if>
			<if test="tax!=null">
				tax = #{tax},
			</if>
			<if test="totalSalary!=null">
				totalSalary = #{totalSalary}
			</if>
		</set>
		where payoffDate = #{payoffDate} and ID like #{ID}
	</update>

</mapper> 