<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mangement.mybatis.mappers.CompanyInvoiceMapper">
	<resultMap type="CompanyInvoice" id="CompanyInvoiceResult">
		<id property="cInvoiceID" column="cInvoiceID" />
		<result property="contractID" column="contractID" />
		<result property="payment" column="payment" />
		<result property="date" column="Date" />
		<result property="type" column="type" />
		<association property="contract" column="contractID" select="com.mangement.mybatis.mappers.ContractMapper.findByID"></association>
	</resultMap>


	<insert id="insert" parameterType="Map">
		insert into companyinvoice
		values
		<foreach item="CompanyInvoice" collection="CompanyInvoices"
			separator=",">
			(#{CompanyInvoice.cInvoiceID},
			#{CompanyInvoice.contractID},
			#{CompanyInvoice.payment},
			#{CompanyInvoice.date},
			#{CompanyInvoice.type})
		</foreach>
	</insert>

	<delete id="delete" parameterType="Map">
		delete from companyinvoice
		<where>
			<if test="cInvoiceID!=null">
				and cInvoiceID like #{cInvoiceID}
			</if>
			<if test="contractID!=null">
				and contractID like #{contractID}
			</if>
			<if test="payment!=null">
				and payment = #{payment}
			</if>
			<if test="date!=null">
				and Date = #{date}
			</if>
			<if test="type!=null">
				and type = #{type}
			</if>
		</where>
	</delete>

	<select id="findByContractID" parameterType="String" resultMap="CompanyInvoiceResult">
		select * from companyinvoice where contractID like #{contractID}
	</select>

	<select id="find" parameterType="Map" resultMap="CompanyInvoiceResult">
		select * from companyinvoice
		<where>
			<if test="cInvoiceID!=null">
				and cInvoiceID like #{cInvoiceID}
			</if>
			<if test="contractID!=null">
				and contractID like #{contractID}
			</if>
			<if test="payment!=null">
				and payment = #{payment}
			</if>
			<if test="date!=null">
				and Date = #{date}
			</if>
			<if test="type!=null">
				and type = #{type}
			</if>
		</where>
	</select>

	<update id="update" parameterType="CompanyInvoice">
		update companyinvoice
		<set>
			<if test="contractID!=null">
				contractID=#{contractID},
			</if>
			<if test="payment!=null">
				payment = #{payment},
			</if>
			<if test="date!=null">
				Date = #{date},
			</if>
			<if test="type!=null">
				type = #{type}
			</if>
		</set>
		where cInvoiceID like #{cInvoiceID}
	</update>

</mapper> 